# ===== Quick Open =====
# Firefox
alt + F1
	firefox
# Discord
alt + F2
	discord
	# vencord
# Neovim
alt + F3
	kitty nvim
# Schedule
alt + F4
	firefox file:///home/arcwand/Class/Schedule/schedule.png

# Global LinkedIn (the best Windows feature, now in sxhkd)
super + ctrl + alt + shift + l:
	firefox https://linkedin.com

# File Explorer
super + e
	thunar

# Calculator
XF86Calculator
	kitty --class calc_term ~/scripts/calc.sh

# F12
# 	kitty --class network_term nmtui

# ===== Desktop Environment =====
# Lock screen
super + shift + x
	betterlockscreen --lock dimblur --off 20

# Screenshot
super + shift + s
	flameshot gui
# Screenshot
Print
	flameshot gui

# Close/kill current window
super + {_,shift + }w
	bspc node -{c,k}

# Quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

# Make sxhkd reload its configuration files
super + Escape
	pkill -USR1 -x sxhkd


# ===== Terminal =====
# Terminal emulator
super + Return
	kitty

# Floating terminal
super + shift + Return
	kitty --class floating_term


# ===== Move Nodes =====
# Focus node/swap node/swap node to monitor
super + {_,shift + ,ctrl + shift + }{h,j,k,l}
	bspc node -{f,s,m} {west,south,north,east} --follow

# Focus one monitor over
super + ctrl + {h,j,k,l}
	bspc monitor -f {west,wouth,north,east} --follow

# Focus the next/previous window in the current desktop
super + {_,shift + }q
	bspc node -f {next,prev}.local.\!hidden.window

# Focus the last used desktop
super + {_,shift + }Tab
	bspc desktop -f {older,newer}.local

# Concretize - set current focus as the newest history item
super + c
	bspc node -f

# Focus the last active node
super + grave
	bspc node -f last

# Focus the next monitor
super + alt + Tab
	bspc monitor -f next

# Move node to the next monitor
super + alt + shift + Tab
	bspc node -m next --follow


# ===== Advanced Movement =====
# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# Rotate tree
super + shift + {d,a}
	bspc node @/ -C {forward,backward}

# Swap the current node and the biggest window
super + g
	bspc node -s biggest.local.window

# Focus the node for the given path jump
super +{_, shift +} comma
	bspc node -f @{first,parent}
super +{_, shift +} period
	bspc node -f @{second,brother}

# Expand a window
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# Contract a window
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}


# ===== Desktops =====
# Focus, send to, or swap adjacent desktops
super + {_,shift + ,ctrl + }bracket{left,right}
	bspc {desktop -f,node -d,desktop -s} {prev,next}.local --follow
super + {_,shift + ,ctrl + }button{4,5}
	bspc {desktop -f,node -d,desktop -s} {prev,next}.local --follow

# Focus, send to, or swap to the given desktop or to the desktop on the next monitor
super + {_,shift + ,ctrl + }{_,alt + }{1-9,0}
	bspc {desktop -f,node -d,desktop -s} {focused,next}:'^{1-9,10}'

# Swap desktop to next monitor
super + ctrl + alt + Tab
	bspc desktop -s next:focused


# ===== State =====
# Alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# Toggle floating/tiled
super + f
	bspc query -N -n focused.floating &&\
		bspc node -t tiled ||\
		bspc node -t floating

# Toggle fullscreen/tiled
{super + s,F11}
	bspc query -N -n focused.fullscreen &&\
		bspc node -t tiled ||\
		bspc node -t fullscreen

# Toggle pseudo-tiled/tiled
super + ctrl + f
	bspc query -N -n focused.pseudo_tiled &&\
		bspc node -t tiled ||\
		bspc node -t pseudo_tiled

# Set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

# (sticky/pin) Always on screen
super + alt + p
	bspc node -g sticky

# (minimize) Hidden 
super + shift + i
	hidden=$(bspc query -N -n .hidden -d focused);\
	if [ -z "$hidden" ]; then bspc node focused -g hidden=on;\
	else bspc node "$hidden" -g hidden=off; fi


# ===== Preselect =====
# Preselect the direction
super + p; {_,super + }{h,j,k,l}
	bspc node -p {_,_}{west,south,north,east}

# Set the preselect ratio
super + p; {_,super + }{1-9}
	{_,_}bspc node -o 0.{1-9}

# Move current window to a pre-selected space
super + shift + m
	bspc node -n last.!automatic

# Cancel the preselection for the focused node/desktop
super + p; {_,super + }{_,shift + }space
	{_,_}{bspc node -p cancel,bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel}


# ===== Tabbed =====
# super + t             base chord for all tabbed manipulation
#   t                   (create) create new tabbed container on focused window
#   r                   (detach) remove focused window from tabbed container
#   shift + r           (detach --all) remove all windows from tabbed container
#   e                   (embed) attach next opened window to focused window
#   {h,j,k,l}           (create) merge focused tabbed/window with target tabbed/window
#   arrows              (transfer) attach focused window with target tabbed/window

# (create) create new tabbed container on focused window
super + t; t
	bsptab-rs create focused

# (detach) remove focused window from tabbed container
super + t; r
	bsptab-rs detach focused

# (detach --all) remove all windows from tabbed container
super + t; shift + r
	bsptab-rs detach --all focused

# (embed) attach next opened window to focused window
super + t; e
	bsptab-rs embed focused

# (create) merge focused tabbed/window with target tabbed/window
super + t; {h,j,k,l}
	bsptab-rs create focused {west,south,north,east}

# (transfer) attach focused window with target tabbed/window
super + t; {Left,Down,Up,Right}
	bsptab-rs transfer focused {west,south,north,east}

super + t; Return
    bsptab-rs embed focused & kitty

# ===== Multimedia Keys =====
# Brightness down
{super + ,_}XF86MonBrightnessDown
	~/.config/sxhkd/brightness.sh dec
# Brightness up
{super + ,_}XF86MonBrightnessUp
	~/.config/sxhkd/brightness.sh inc

# Volume down
{super + ,_}XF86AudioLowerVolume
	~/.config/sxhkd/volume.sh -5
# Volume up
{super + ,_}XF86AudioRaiseVolume
	~/.config/sxhkd/volume.sh +5
# Mute volume
{super + ,_}XF86AudioMute
	~/.config/sxhkd/volume.sh mute

# Play/Pause
XF86AudioPlay
	playerctl play-pause
# Previous
{shift + ,_}XF86AudioPrev
	playerctl previous
# Next
{shift + ,_}XF86AudioNext
	playerctl next
# The shift option allows me to use my laptop, since I binded
# shift + fn + f2 to previous


# ===== Notifications =====
# Close notifications
super + n; {super + ,_}{x,c}
	{_,_}wired --drop {latest,all}

# Change number of notifications displayed
super + n; {super + h:, h:,_}{super + ,_}p
	wired --show 1
super + n; {super + h:, h:,_}{super + ,_}n
	wired --drop latest

# Click notification
super + n; {super + ,_}{Return,1-4}
	{_,_}wired -a latest:{default,1-4}

# Toggle do not disturb mode
super + n; {super + ,_}d
	wired --dnd on && wired --drop all
super + n; {super + ,_}e
	wired --dnd off

# ===== Bar =====
# Popup polybar
Super_{L,R}
	for id in $(xdotool search --class polybar); do $HOME/scripts/hideIt.sh --id $id --show; done
@Super_{L,R}
	for id in $(xdotool search --class polybar); do $HOME/scripts/hideIt.sh --id $id --hide; done

# Lock polybar hidden/shown
super + {b; super + b,shift + b}
	vis={show,hide} &&\
	for id in $(xdotool search --class polybar);\
		do; $HOME/scripts/hideIt.sh --id $id --$vis;\
		$HOME/scripts/hideIt.sh --id $id --toggle-override;\
		$HOME/scripts/hideIt.sh --id $id --$vis;\
	done

# Show/hide polybar
super + b; {_,super + }h
	polybar-msg cmd toggle && bspc config bottom_padding 0

# Toggle Polybar date
super + b; {_,super + }d
	polybar-msg action "#date.toggle"

# Network menu
super + b; {_,super + }n
	$HOME/.config/rofi/rofi-network-manager/rofi-network-manager.sh


# ===== Rofi Bindings =====
# Rofi
super + d
	~/.config/rofi/launcher.sh

# Window switcher (local)
alt + Tab
	~/.config/rofi/window_local.sh

# Window switcher (global)
alt + shift + Tab
	~/.config/rofi/window_global.sh

# Clipboard history
super + alt + v
	rofi -modi "clipboard:greenclip print" -show clipboard -theme-str '#window \{y-offset: 200; \}'

# Emoji picker
super + semicolon
	/usr/bin/rofimoji --selector-args="-monitor -1"

# Unicode picker
super + shift + u
	/usr/bin/rofimoji --selector-args="-monitor -1" --files all
# Unicode picker copy code point
super + alt + u
	/usr/bin/rofimoji --selector-args="-monitor -1" --files all --action copy-unicode

# Show help
super + slash
    ~/.config/sxhkd/sxhkd-help


# ===== Script keys =====
# Plover resume
super + ctrl + alt + shift + F12; ctrl+p; ctrl+r
	~/Applications/plover-4.0.0.dev12-x86_64_1117a3034f0a02c8898a2bccdcb0a905.AppImage -g none &&\
	notify-send "Plover" "Started"
# Plover stop
super + ctrl + alt + shift + F12; ctrl+p; ctrl+s
	~/Applications/plover-4.0.0.dev12-x86_64_1117a3034f0a02c8898a2bccdcb0a905.AppImage -s plover_send_command quit &&\
	notify-send "Plover" "Stopped"

# MX Master swipe
{_,alt + }XF86Launch{5,6,7,8}{_, + ctrl, + shift, + ctrl + shift, super, super + ctrl, super + shift}
	n=3 && {_,n=4 && xdotool keyup alt && } ~/scripts/gestures/swipe_{left,down,up,right}-$n.sh{_,_,_,_,_,_,_}

